<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jojo.helidon.api</groupId>
	<artifactId>avaje-helidon-nima</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>avaje-helidon-nima-template</name>
	<description>Demo project for Helidon</description>
	<parent>
		<groupId>io.avaje</groupId>
		<artifactId>avaje-nima-parent</artifactId>
		<version>1.0</version>
		<relativePath />
	</parent>
	<properties>
		<maven.compiler.release>21</maven.compiler.release>
		<module.name>nima.example</module.name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>io.avaje</groupId>
			<artifactId>avaje-nima</artifactId>
		</dependency>

		<dependency>
			<groupId>io.avaje</groupId>
			<artifactId>avaje-nima-generator</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.avaje</groupId>
			<artifactId>avaje-nima-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.avaje</groupId>
			<artifactId>avaje-logback-encoder</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<argLine>@{argLine} --enable-preview</argLine>
					<useModulePath>false</useModulePath>
				</configuration>
			</plugin>
			<!-- Create the Runnable Jar with dependencies -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<compilerArgs>
						<arg>--enable-preview</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.avaje</groupId>
				<artifactId>avaje-inject-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>provides</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-modules</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/modules</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/modules</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>jlink</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.moditect</groupId>
						<artifactId>moditect-maven-plugin</artifactId>
						<version>1.2.1.Final</version>
						<executions>
							<execution>
								<id>create-runtime-image</id>
								<phase>package</phase>
								<goals>
									<goal>create-runtime-image</goal>
								</goals>
								<configuration>
									<modulePath>
										<path>${project.build.directory}/modules</path>
									</modulePath>
									<modules>
										<module>nima.example</module>
									</modules>
									<stripDebug>true</stripDebug>
									<noManPages>true</noManPages>
									<noHeaderFiles>true</noHeaderFiles>
									<jarInclusionPolicy>NONE</jarInclusionPolicy>
									<outputDirectory>
										${project.build.directory}/jlink-image
									</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>